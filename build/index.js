#!/usr/bin/env node
!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.i=function(value){return value},__webpack_require__.d=function(exports,name,getter){Object.defineProperty(exports,name,{configurable:!1,enumerable:!0,get:getter})},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=12)}([function(module,exports){module.exports=require("chalk")},function(module,exports){module.exports=require("fs-extra")},function(module,exports){module.exports=require("child_process")},function(module,exports,__webpack_require__){"use strict";var git_1=__webpack_require__(7);exports.git=git_1.git;var npm_1=__webpack_require__(8);exports.npm=npm_1.npm},function(module,exports,__webpack_require__){"use strict";var patch_1=__webpack_require__(11),minor_1=__webpack_require__(10),major_1=__webpack_require__(9);exports.bumpers=[patch_1.patch,minor_1.minor,major_1.major]},function(module,exports){module.exports=require("path")},function(module,exports){module.exports=require("readline")},function(module,exports,__webpack_require__){"use strict";function git(line,type){return new Promise(function(resolve,reject){line.question('List all files you would you like to commit to git.\n\r\t*)Default is "package.json"\n\r\t*)pass in "--all" to stage and commit all modified files.',function(answer){""===answer.trim()?child_process_1.exec("git add package.json",function(err,stdout,stderr){err&&(console.error(chalk.red(err.message)),process.exit(1)),console.info(chalk.green(stdout))}):child_process_1.exec("git add "+answer.trim(),function(err,stdout,stderr){err&&(console.error(chalk.red(err.message)),process.exit(1)),console.info(chalk.green(stdout))}),line.question('Please enter the message to append to this git commit.\n\r\tdefault is: "bump '+type+' version number"',function(answer){var message;message=""===answer.trim()?"bump "+type+" version number":answer,child_process_1.exec('git commit -m"'+message+'"',function(err,stdout,stdin){err&&(console.error(chalk.red(err.message)),process.exit(1)),console.info(chalk.green(stdout)),resolve(!0)})})})})}var child_process_1=__webpack_require__(2),chalk=__webpack_require__(0);exports.git=git},function(module,exports,__webpack_require__){"use strict";function npm(line,type){return new Promise(function(resolve,reject){child_process_1.exec("npm whoami",function(err,stdout,stderr){err&&(console.error(chalk.red('It appears you are not logged in. Please run "npm login first and try again..."\r\n\t'+err.message)),process.exit(1));var username=stdout;line.question("Is this your npm username? ("+username+')\r\n\tPlease write "yes" or "no" explicitly to continue.',function(answer){"no"===answer.trim()&&(console.log(chalk.blue("Log into npm with the desired username/password before trying again.")),process.exit(0)),"yes"===answer.trim()&&child_process_1.exec("npm publish",function(err,stdout,stderr){err&&(console.log(chalk.red("An error occured. Please correct and try again!\r\n\t"+err.message)),process.exit(1)),console.info(chalk.green(stdout)),resolve(!0)})})})})}var child_process_1=__webpack_require__(2),chalk=__webpack_require__(0);exports.npm=npm},function(module,exports,__webpack_require__){"use strict";function major(path){return new Promise(function(resolve,reject){fs_extra_1.readJSON(path,function(err,data){err&&reject(err);var versionArray=data.version.split("."),major=versionArray[0],majorNumber=parseInt(major),newMajorNumber=majorNumber+1,newVersion=newMajorNumber+"."+versionArray[1]+"."+versionArray[2],newPackage=Object.assign({},data,{version:newVersion});fs_extra_1.outputJSON(path,newPackage,function(err){err&&reject(err),resolve(!0)})})})}var fs_extra_1=__webpack_require__(1);exports.major=major},function(module,exports,__webpack_require__){"use strict";function minor(path){return new Promise(function(resolve,reject){fs_extra_1.readJSON(path,function(err,data){err&&reject(err);var versionArray=data.version.split("."),minor=versionArray[1],minorNumber=parseInt(minor),newMinorNumber=minorNumber+1,newVersion=versionArray[0]+"."+newMinorNumber+"."+versionArray[2],newPackage=Object.assign({},data,{version:newVersion});fs_extra_1.outputJSON(path,newPackage,function(err){err&&reject(err),resolve(!0)})})})}var fs_extra_1=__webpack_require__(1);exports.minor=minor},function(module,exports,__webpack_require__){"use strict";function patch(path){return new Promise(function(resolve,reject){fs_extra_1.readJSON(path,function(err,data){err&&reject(err);var versionArray=data.version.split("."),patch=versionArray[2],patchNumber=parseInt(patch),newPatchNumber=patchNumber+1,newVersion=versionArray[0]+"."+versionArray[1]+"."+newPatchNumber,newPackage=Object.assign({},data,{version:newVersion});fs_extra_1.outputJSON(path,newPackage,function(err){err&&reject(err),resolve(!0)})})})}var fs_extra_1=__webpack_require__(1);exports.patch=patch},function(module,exports,__webpack_require__){"use strict";var bumpers_1=__webpack_require__(4),path_1=__webpack_require__(5),readline_1=__webpack_require__(6),actions_1=__webpack_require__(3),chalk=__webpack_require__(0),args=process.argv.filter(function(a,i){return i>1});args.length>0?Promise.resolve().then(function(){return new Promise(function(resolve,reject){bumpers_1.bumpers.filter(function(f){return f.name===args[0]}).forEach(function(f){var p=path_1.resolve("package.json");console.log(chalk.yellow("Bumping up "+f.name+" version based on version reported in file: \n\r"+p)),f(p).then(function(){args.shift();var line=readline_1.createInterface(process.stdin,process.stdout);Promise.resolve().then(function(){return args.indexOf("--git")!==-1&&actions_1.git(line,f.name)}).then(function(){return args.indexOf("--npm")!==-1&&actions_1.npm(line,f.name)}).then(function(){console.log(chalk.bgGreen("Fished!")),resolve(!0),process.exit()}).catch(function(err){console.error(chalk.red(err)),reject(err)})}).catch(function(err){console.log(chalk.red(err)),reject(err)})})})}).catch(function(err){return console.error(chalk.red(err))}):(console.log(chalk.magenta("Please specify which level of versioning you which to bump.\n\rAcceptable values are: "+chalk.bold('"patch"')+", "+chalk.bold('"minor"')+", "+chalk.bold('"major"'))),process.exit(0))}]);
//# sourceMappingURL=index.js.map